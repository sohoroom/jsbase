/*布林運算符用於將表達式轉為布林值，基礎一共包含四個運算符
取反(Not)運算符：!
且(And)運算符：&&
或(Or)運算符：||
三元運算符：?:
*/
//取反(Not)運算符(!)：將布林值變為相反值後返回
//取反為真羅列：(其餘取反皆為false)
!false;  //true
!undefined; // true
!null; // true
!0; // true
!NaN; // true
!""; // true
//連續兩次取反(!!)，作用同於Boolean()
!!0
Boolean(0)
!!NaN
Boolean(NaN)

//且(And)運算符(&&)常用於多表達式的求值，運算規則如下(不同於邏輯閘)：
//第一個運算子的布林值為true，則返回第二個運算子的值(是值，不是布林值)；
//若第一個運算子的布林值為false，則返回第一個運算子的值，且不再對第二個
//運算子求值。
//且(And)運算符邏輯：true往後流，false就回彈自身。
't' && ''  //''
't' && 'f'  //'f'
'' && 'f'  //''
'' && (1+2)  //''
(1+2) && ''  //''
true && '(1+2)' && (1+2) && '' && 'foo' && true  //''
1 && 2 && 3  && 4  //4

//或(Or)運算符(||)亦用於多表達式的求值，運算規則如下(不同於邏輯閘)：
//第一個運算子的布林值為true，則返回第一個運算子的值，且不對第二個運算子求值；
//若第一個運算子的布林值為false，則返回第二個運算子的值。
//或(Or)運算符邏輯正與且(And)運算符邏輯相反，true回彈自身，false往後流。
't' || ''  //'t'
't' || 'f'  //'t'
'' || 'f'  //'f'
'' || (1+2)  //3
(1+2) || ''  //3
true || '(1+2)' || (1+2) || '' || 'foo' || true  //true
1 || 2 || 3  || 4  //1

//三元條件運算符(?:)，由(?)和(:)組成分隔三個表達式，其是唯一需要三個運算子的
//運算符。其運算規則為若第一個表達式之布林值為true時，返回第二個表達式的值；
//若第一個表達式之布林值為false時，則返回第三個表達式的值。
't' ? 'hello' : 'world' //'hello'
0 ? 'hello' : 'world' //'world'